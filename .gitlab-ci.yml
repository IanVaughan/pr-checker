image: registry.quiqup.com/backend/docker-api-builder:0.0.4

services:
  - redis:latest
  - postgres:latest

variables:
  POSTGRES_DB: quiqup_test
  POSTGRES_USER: test
  POSTGRES_PASSWORD: ""
  DATABASE_URL: postgres://$POSTGRES_USER@postgres:5432/$POSTGRES_DB
  DATABASE_URL_MAIN: postgres://$POSTGRES_USER@postgres:5432/postgres
  REDIS_URL: redis://redis:6379/
  IMAGE_URL: registry.quiqup.com/ian/lab-stats

stages:
  - test
  - build
  - deploy

test:
  stage: test
  cache:
    key: labstats-bundle
    untracked: true
    paths:
      - vendor/ruby
  variables:
    RAKE_ENV: test
    CREATE_DATABASE_URL: postgres://$POSTGRES_USER@postgres:5432/postgres
    SIDEKIQ_REDIS_URL: redis://redis:6379/
    SERVER_URL: http://localhost.com
  script:
    - bundle install
    - rake db:setup
    - rspec

build_image:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.quiqup.com
    - docker pull $IMAGE_URL:latest
    - docker build --cache-from $IMAGE_URL:latest --tag $IMAGE_URL:$CI_BUILD_REF --tag $IMAGE_URL:latest .
    - docker push $IMAGE_URL:$CI_BUILD_REF
    - docker push $IMAGE_URL:latest

deploy:
  stage: deploy
  variables:
    RANCHER_ACCESS_KEY: $RANCHER_ACCESS_KEY_PRODUCTION
    RANCHER_SECRET_KEY: $RANCHER_SECRET_KEY_PRODUCTION
  environment:
    name: staging
  script:
    - echo "Deploying $CI_BUILD_REF"
    - rancher-gitlab-deploy --environment Production --stack FraudService --service web --start-before-stopping --new-image $IMAGE_URL:$CI_BUILD_REF
    - rancher-gitlab-deploy --environment Production --stack FraudService --service sidekiq --start-before-stopping --new-image $IMAGE_URL:$CI_BUILD_REF
    - notify-rollbar-deploy --accesstoken $ROLLBAR_POST_SERVER_ITEM_ACCESS_TOKEN --environment production --username GitLab --revision $CI_BUILD_REF
  when: manual
  only:
    - master
